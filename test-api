#!/bin/bash

export GEMINI_API_KEY=AIzaSyA73ikWJGOyRsDFO1oM0jI2RsGQiUz2B7Y

# Color definitions
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

command_exists() {
    command -v "$1" >/dev/null 2>&1
}

call_gemini_api() {
    local query="$1"

    if [ -z "$GEMINI_API_KEY" ]; then
        echo -e "${RED}Gemini API key not found. Set GEMINI_API_KEY environment variable.${NC}"
        return 1
    fi

    echo -e "${YELLOW}ðŸŒŸ Querying Gemini AI...${NC}"

    # Use double quotes to allow variable expansion
    response=$(curl -s -w "\n%{http_code}" \
        "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" \
        -H 'Content-Type: application/json' \
        -H "X-goog-api-key: $GEMINI_API_KEY" \
        -X POST \
        -d "{
            \"contents\": [
                {
                    \"parts\": [
                        {
                            \"text\": \"$query\"
                        }
                    ]
                }
            ]
        }")

    http_code="${response##*$'\n'}"
    json_response="${response%$'\n'*}"

    if [ "$http_code" = "200" ]; then
        if command_exists jq; then
            echo "$json_response" | jq -r '.candidates[0].content.parts[0].text' 2>/dev/null || echo "$json_response"
        else
            echo "$json_response"
        fi
    else
        echo "Error: HTTP $http_code"
        echo "$json_response"
    fi
}

# Call the function with the first argument or read from stdin
if [ $# -eq 0 ]; then
    # Read from stdin if no arguments
    read -r query
    call_gemini_api "$query"
else
    # Use first argument
    call_gemini_api "$1"
fi